services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - my_network
    
  kafka:
    image: confluentinc/cp-kafka:6.1.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - my_network

  python-producer:
    image: hetparekh/python-producer:latest
    volumes:
      - ./kafka-python-scripts:/app
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_BROKER: kafka:29092
    networks:
      - my_network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my_network

  flink-jobmanager:
    image: flink:1.18.1-scala_2.12-java17
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager        
    command: jobmanager
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/overview"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  flink-taskmanager:
    image: flink:1.18.1-scala_2.12-java17
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 5  
    healthcheck:
      test: ["CMD", "curl", "-f", "http://flink-jobmanager:8081/overview"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  job-submitter:
    image: hetparekh/job-submitter:latest
    depends_on:
      - flink-jobmanager
      - kafka
    networks:
      - my_network

  flask-server:
    image: hetparekh/flask-server:latest
    ports:
      - "5000:5000"
    depends_on:
      - redis
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
